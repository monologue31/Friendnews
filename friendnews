#!/usr/bin/env ruby

require 'thread'
require 'drb/drb'
require 'dbm'
require_relative './fnsserver.rb'

#Initialize globle parameter
$fns_conf = DBM.open("./etc/fns_conf")  
$fns_queue = SizedQueue.new(100)
$fns_path = $fns_conf["fns_path"]

case ARGV[0]
when "start",nil
  #Process.daemon
  #Start Newfeeds
  Thread.start do
    feeds   = FriendNews::FNS_Feeds.new
    feeds.run
  end
  
  #Start System Managment
  Thread.start do
  	url = "druby://localhost:11118"
  	fns_sys_mgt = FriendNews::FNS_Managment.new 
  	DRb.start_service(url,fns_sys_mgt)
  	sleep()
  end
  
  #Start Server
  nntp = nil
  nntp = true if ARGV[1] == "nntp"
  server  = FriendNews::FNS_Server.new(nntp)
  server.start
when "mgt"
  fns_sys_mgt = FriendNews::FNS_Managment.new 
  case ARGV[1]
  when "add_host"
  when "rm_host"
  when "show_host"
    fns_sys_mgt.show_host
  when "show_tags"
    fns_sys_mgt.show_tags
  when "add_feedrule"
  when "rm_feedrule"
  when "add_mapping"
  when "rm_mapping"
  when "set_env"
  when "add_key"
    fns_sys_mgt.add_key_cl(ARGV[2],ARGV[3])
  when "rm_key"
  when "show_keypool"
    fns_sys_mgt.show_keypool
  when "sys_init"
    fns_sys_mgt.sys_init(ARGV[2])
  else
    puts <<-EOS
Friend News Systems by Xiao Kunyao Univercity of Tsukuba
usage: friendnews mnt [arguments] [value]

Arguments:
  add_host        add host's ip
  rm_host         remove host's ip
  add_feedrule    add a rule to feed
  rm_feedrule     remove a rule to feed
  add_mapping     add a tag mapping rule
  rm_mapping      rm a tag mapiing rule
  set_env         setting system option
  add_key         add a friend's public key
  rm_key          remove a friend's public key
  sys_init        initialize Friend News Systems
  EOS
  end
else
  puts <<-EOS
Friend News Systems by Xiao Kunyao Univercity of Tsukuba
usage: friendnews [arguments] [value]

Arguments:
  start         start Friend News System
  mgt           start Friend News System Managment.use friendnews mnt -h to get help
  EOS
end
